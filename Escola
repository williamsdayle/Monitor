package monitor;

public class Faculdade implements Runnable{

    private float[] notaProva;
    private float[] notaTrabalho;
    private int faltas;

    public Faculdade(float[] notaP, float[] notaT, int faltas) {
        this.notaProva = notaP;
        this.notaTrabalho = notaT;
        this.faltas = faltas;
    }

    public float[] getNotaProva() {
        return notaProva;
    }

    public void setNotaProva(float[] notaP) {
        this.notaProva = notaP;
    }

    public float[] getNotaTrabalho() {
        return notaTrabalho;
    }

    public void setNotaTrabalho(float[] notaT) {
        this.notaTrabalho = notaT;
    }

    public int getFaltas() {
        return faltas;
    }

    public void setFaltas(int faltas) {
        this.faltas = faltas;
    }
    
    public synchronized float somaNotas(){
        
    int valor = 0;
        for(int i =0;i<this.notaProva.length;i++){
            valor +=this.notaProva[i];        
        }
        for(int i =0;i<this.notaTrabalho.length;i++){
            valor +=this.notaTrabalho[i];        
        }
            return valor;
    }
    
    public double calculoFinal(){
        
        double valor = (this.somaNotas()/((this.notaProva.length)+(this.notaTrabalho.length)) * (1 -(this.getFaltas() * 0.03)));
        
        return valor;
    }
    

    
    @Override
    public void run() {
        
        for (int i = 0; i < this.notaProva.length; i++) {
        System.out.println("Nota da Prova " + (i+1) + " : "  + this.notaProva[i]+"\n" );
     }
        for (int i = 0; i < this.notaTrabalho.length; i++) {
        System.out.println("Nota Trabalho " + (i+1) + " : " + this.notaTrabalho[i]+"\n"); 
     }

        System.out.printf("Nota total : %.2f\n", this.calculoFinal());

        
        
    }
   
}
